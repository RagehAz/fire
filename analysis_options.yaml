linter:
  rules:
    parameter_assignments: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    always_use_package_imports: false # need to allow relative imports for easier file migration
    avoid_returning_null_for_future: true
    avoid_web_libraries_in_flutter: true
    close_sinks: true
    comment_references: true
    control_flow_in_finally: true
    empty_statements: true
    hash_and_equals: true
#    invariant_booleans: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    prefer_void_to_null: true
    avoid_relative_lib_imports: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    use_key_in_widget_constructors: true
    valid_regexps: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    cancel_subscriptions: true
    annotate_overrides: true
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_classes_with_only_static_members: true
    avoid_double_and_int_checks: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: true
    avoid_implementing_value_types: true
    avoid_init_to_null: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    deprecated_consistency: true
    do_not_use_environment: true
    empty_catches: true
    empty_constructor_bodies: true
    eol_at_end_of_file: true
    exhaustive_cases: true
    file_names: true
    implementation_imports: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_names: true
    missing_whitespace_between_adjacent_strings: true
    no_leading_underscores_for_library_prefixes: true
    no_runtimeType_toString: true
    non_constant_identifier_names: true
    noop_primitive_operations: true
    null_closures: true
    one_member_abstracts: true
    only_throw_errors: true
    overridden_fields: true
    package_api_docs: true
    package_prefixed_library_names: true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors_in_immutables: true
    prefer_contains: true
    prefer_single_quotes: true
    prefer_equal_for_default_values: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    recursive_getters: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_named_constants: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    depend_on_referenced_packages: true
    package_names: true
    secure_pubspec_urls: true
    avoid_type_to_string: true
    avoid_empty_else: true
    avoid_print: true
    avoid_types_as_parameter_names: true

    # HONESTLY : I don't know how to fix these
    avoid_dynamic_calls: false
    always_specify_types: false
    unnecessary_raw_strings: false # raw strings, afraid to mess with reg ex

    # will come back to you later
    avoid_annotating_with_dynamic: false # incompatible with always_specify_types
    use_string_buffers: false # mesh ader delwa2ty
    use_setters_to_change_properties: false # mesh fahem
    void_checks: false # need tests
    no_leading_underscores_for_local_identifiers: false # 3000 hints

    # JUST BEFORE RELEASE
    directives_ordering: false
    diagnostic_describe_all_properties: false

    # ----- FALSE RULES : defiantly false rules
    avoid_bool_literals_in_conditional_expressions: false # no i will not create long methods to define bool values
    prefer_relative_imports: false
    avoid_types_on_closure_parameters: false # incompatible with always_specify_types
    omit_local_variable_types: false # incompatible with always_specify_types
    flutter_style_todos: false # fakes
    lines_longer_than_80_chars: false # fires 7500 hints
    library_private_types_in_public_api: false # enta 3abeet yabny ?
    prefer_constructors_over_static_methods: false # BIG NO
    prefer_double_quotes: false # incompatible with prefer_single_quotes
    prefer_expression_function_bodies: false # not important & messes my organization
    prefer_final_parameters: false # fires ~5000 hints
    prefer_foreach: false # incompatible with avoid_function_literals_in_foreach_calls yahbal
    prefer_mixin: false # fakes
    public_member_api_docs: false # fires ~4000 hints
    unnecessary_final: false # incompatible with prefer_final_locals, prefer_final_parameters
    unnecessary_lambdas: false # I like to see what is being passed through method refs
    sort_pub_dependencies: false # fakes
    cascade_invocations: false # fakes
    library_prefixes: false # fakes

    # ----- FALSE RULES : Experimental
    use_build_context_synchronously: false
    cast_nullable_to_non_nullable: false
    no_default_cases: false
    null_check_on_nullable_type_parameter: false
    unnecessary_null_checks: false

analyzer:
  errors:
    missing_required_param: error
    parameter_assignments: error
